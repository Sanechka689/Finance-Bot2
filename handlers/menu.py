# handlers/menu.py

from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes
from services.sheets_service import open_finance_and_plans

# 1. —Å–æ—Å—Ç–æ—è–Ω–∏—è
STATE_MAIN_MENU = 100

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """# 1.1 ‚Äî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    # 1.2 ‚Äî –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —ç–º–æ–¥–∑–∏
    keyboard = [
        [InlineKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å—ã",       callback_data="menu:finance"),
         InlineKeyboardButton("üìù –û–ø–µ—Ä–∞—Ü–∏–∏",      callback_data="menu:operations")],
        [InlineKeyboardButton("üè∑ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è", callback_data="menu:classification"),
         InlineKeyboardButton("üóì –ü–ª–∞–Ω—ã",         callback_data="menu:plans")],
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫", callback_data="menu:add_bank"),
         InlineKeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å –ë–∞–Ω–∫",  callback_data="menu:del_bank")],
        [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É",   callback_data="menu:edit_table"),
         InlineKeyboardButton("üí≥ –ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ",     callback_data="menu:change_tariff")],
        [InlineKeyboardButton("üîó –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É",   callback_data="menu:show_sheet"),
         InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",          callback_data="menu:support")],
        # 1.3 ‚Äî –æ–¥–Ω–∞ –±–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞ ¬´–ù–∞–∑–∞–¥¬ª
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu:back")],
    ]

    # –≤–º–µ—Å—Ç–æ update.message –∏—Å–ø–æ–ª—å–∑—É–µ–º effective_message,
    # —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ –∏ –ø—Ä–∏ callback_query
    target = update.effective_message  
    await target.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    # –µ—Å–ª–∏ –≤—ã–∑–æ–≤ –∏–∑ –∫–æ–ª–ª–±—ç–∫–∞ ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
    # –∏–Ω–∞—á–µ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    if update.callback_query:
        await update.callback_query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    return STATE_MAIN_MENU

async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """# 2.1 ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()
    choice = query.data.split(":", 1)[1]

    # 2.2 ‚Äî –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ¬´–ú–µ–Ω—é¬ª –∏–∑ /add
    if choice == "open":
        return await show_main_menu(update, context)

    # 2.3 ‚Äî ¬´–ù–∞–∑–∞–¥¬ª –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ —ç—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
    if choice == "back":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É –æ–ø–µ—Ä–∞—Ü–∏–π (/add)
        from handlers.operations import go_main_menu
        return await go_main_menu(update, context)

    # 2.4 ‚Äî –§–∏–Ω–∞–Ω—Å—ã
    if choice == "finance":
        url = context.user_data.get("sheet_url")
        if not url:
            await query.edit_message_text(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É: /setup –∏ —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É."
            )
            return STATE_MAIN_MENU

        finance_ws, _ = open_finance_and_plans(url)
        records = finance_ws.get_all_records()
        balances = {}
        for row in records:
            bank = row.get("–ë–∞–Ω–∫") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            raw = row.get("–°—É–º–º–∞", 0)
            try:
                amt = float(raw)
            except (TypeError, ValueError):
                amt = float(str(raw).replace(",", "."))
            balances[bank] = balances.get(bank, 0.0) + amt

        total = sum(balances.values())
        lines = [f"‚Ä¢ {b}: {balances[b]:.2f}" for b in balances]
        text = "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ –±–∞–Ω–∫–∞–º:*\n" + "\n".join(lines)
        text += f"\n\n*–û–±—â–∞—è —Å—É–º–º–∞:* {total:.2f}"

        # –∑–∞–º–µ–Ω—è–µ–º –º–µ–Ω—é –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await query.edit_message_text(text, parse_mode="Markdown")
        return STATE_MAIN_MENU

    # 2.5 ‚Äî –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã (–∑–∞–≥–ª—É—à–∫–∏)
    responses = {
        "operations":    "üìù ¬´–û–ø–µ—Ä–∞—Ü–∏–∏¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "classification":"üè∑ ¬´–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "plans":         "üóì ¬´–ü–ª–∞–Ω—ã¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "add_bank":      "‚ûï ¬´–î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "del_bank":      "‚ûñ ¬´–£–¥–∞–ª–∏—Ç—å –ë–∞–Ω–∫¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "edit_table":    "‚úèÔ∏è ¬´–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "change_tariff": "üí≥ ¬´–ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "show_sheet":    "üîó ¬´–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "support":       "üí¨ ¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
    }
    text = responses.get(choice, "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.")
    await query.edit_message_text(text)
    return STATE_MAIN_MENU

def register_menu_handlers(app):
    """# 3 ‚Äî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–µ–Ω—é."""
    app.add_handler(CommandHandler("menu", show_main_menu))
    app.add_handler(CallbackQueryHandler(handle_menu_selection, pattern=r"^menu:"))
