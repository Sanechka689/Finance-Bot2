# handlers/menu.py

from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes
from services.sheets_service import open_finance_and_plans
from utils.constants import STATE_OP_MENU  # –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ /add

def _build_main_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å—ã",         callback_data="menu:finance"),
         InlineKeyboardButton("üìù –û–ø–µ—Ä–∞—Ü–∏–∏",        callback_data="menu:operations")],
        [InlineKeyboardButton("üè∑ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è",   callback_data="menu:classification"),
         InlineKeyboardButton("üóì –ü–ª–∞–Ω—ã",           callback_data="menu:plans")],
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫",   callback_data="menu:add_bank"),
         InlineKeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å –ë–∞–Ω–∫",    callback_data="menu:del_bank")],
        [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data="menu:edit_table"),
         InlineKeyboardButton("üí≥ –ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ",   callback_data="menu:change_tariff")],
        [InlineKeyboardButton("üîó –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data="menu:show_sheet"),
         InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",        callback_data="menu:support")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥",            callback_data="menu:back")],
    ])

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–Ω–æ–≤—ã–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)."""
    kb = _build_main_kb()
    if update.callback_query:
        await update.callback_query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:", reply_markup=kb
        )
    else:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:", reply_markup=kb
        )
    return STATE_OP_MENU

async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ menu:* –∫–æ–ª–ª–±—ç–∫–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ –§–∏–Ω–∞–Ω—Å—ã."""
    query = update.callback_query
    await query.answer()  # —Å–∫—Ä—ã–≤–∞–µ–º ¬´—á–∞—Å–∏–∫–∏¬ª

    data = query.data  # –Ω–∞–ø—Ä–∏–º–µ—Ä "menu:finance"

    # –æ—Ç–∫—Ä—ã—Ç—å/–ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å –º–µ–Ω—é
    if data == "menu:open":
        await show_main_menu(update, context)
        return STATE_OP_MENU

    # –Ω–∞–∑–∞–¥ ‚Äî –≤–µ—Ä–Ω—É—Ç—å –Ω–∞ —ç—Ç–∞–ø /add
    if data == "menu:back":
        from handlers.operations import go_main_menu
        return await go_main_menu(update, context)

    # —Ñ–∏–Ω–∞–Ω—Å—ã ‚Äî –ø–æ—Å—á–∏—Ç–∞—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å
    if data == "menu:finance":
        await query.answer(text="–ü–æ–ª—É—á–∞—é –±–∞–ª–∞–Ω—Å‚Ä¶", show_alert=False)

        url = context.user_data.get("sheet_url")
        if not url:
            # –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ ‚Äî –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å –º–µ–Ω—é
            await query.edit_message_text(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /setup –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É.",
                reply_markup=_build_main_kb()
            )
            return STATE_OP_MENU

        # –ø–æ–ø—Ä–æ–±—É–µ–º —Å—á–∏—Ç–∞—Ç—å –∑–∞–ø–∏—Å–∏
        try:
            ws, _ = open_finance_and_plans(url)
            records = ws.get_all_records()
        except Exception as e:
            await query.edit_message_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:\n{e}",
                reply_markup=_build_main_kb()
            )
            return STATE_OP_MENU

        # –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –±–∞–Ω–∫–∞–º
        balances = {}
        for row in records:
            bank = row.get("–ë–∞–Ω–∫") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            raw  = row.get("–°—É–º–º–∞", 0)
            try:
                amt = float(raw)
            except (TypeError, ValueError):
                amt = float(str(raw).replace(",", "."))
            balances[bank] = balances.get(bank, 0.0) + amt

        total = sum(balances.values())
        lines = [f"‚Ä¢ {b}: {balances[b]:.2f}" for b in balances]
        text = "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ –±–∞–Ω–∫–∞–º:*\n" + "\n".join(lines)
        text += f"\n\n*–û–±—â–∞—è —Å—É–º–º–∞:* {total:.2f}"

        # –≤—ã–≤–æ–¥–∏–º –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π ¬´–ù–∞–∑–∞–¥¬ª
        await query.edit_message_text(
            text,
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu:open")]
            ])
        )
        return STATE_OP_MENU

    # –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã ‚Äî –∑–∞–≥–ª—É—à–∫–∏
    responses = {
        "menu:operations":    "üìù –†–∞–∑–¥–µ–ª ¬´–û–ø–µ—Ä–∞—Ü–∏–∏¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:classification":"üè∑ –†–∞–∑–¥–µ–ª ¬´–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:plans":         "üóì –†–∞–∑–¥–µ–ª ¬´–ü–ª–∞–Ω—ã¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:add_bank":      "‚ûï –†–∞–∑–¥–µ–ª ¬´–î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:del_bank":      "‚ûñ –†–∞–∑–¥–µ–ª ¬´–£–¥–∞–ª–∏—Ç—å –ë–∞–Ω–∫¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:edit_table":    "‚úèÔ∏è –†–∞–∑–¥–µ–ª ¬´–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:change_tariff": "üí≥ –†–∞–∑–¥–µ–ª ¬´–ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:show_sheet":    "üîó –†–∞–∑–¥–µ–ª ¬´–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:support":       "üí¨ –†–∞–∑–¥–µ–ª ¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
    }
    text = responses.get(data, "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.")
    await query.edit_message_text(text, reply_markup=_build_main_kb())
    return STATE_OP_MENU

def register_menu_handlers(app):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π /menu –∏ –≤—Å–µ menu:* –∫–æ–ª–ª–±—ç–∫–∏."""
    app.add_handler(CommandHandler("menu", show_main_menu))
    app.add_handler(CallbackQueryHandler(handle_menu_selection, pattern=r"^menu:"))
