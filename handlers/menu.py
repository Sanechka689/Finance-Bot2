# handlers/menu.py

import logging
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import CommandHandler, CallbackQueryHandler, ContextTypes

from services.sheets_service import open_finance_and_plans
from utils.constants import STATE_OP_MENU  # –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ /add
from handlers.men_oper import start_men_oper  # –∏–º–ø–æ—Ä—Ç –≤–µ—Ç–∫–∏ ¬´–û–ø–µ—Ä–∞—Ü–∏–∏¬ª

from handlers.classification import (
  start_classification, handle_class_period, handle_class_back
)
from utils.constants import STATE_CLASS_MENU

from telegram.ext import MessageHandler
from telegram.ext import filters
from handlers.menu_banks import show_banks_menu
from services.sheets_service import open_finance_and_plans


def _build_main_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å—ã",       callback_data="menu:finance"),
         InlineKeyboardButton("üìù –û–ø–µ—Ä–∞—Ü–∏–∏",      callback_data="menu:men_oper")],
        [InlineKeyboardButton("üè∑ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è", callback_data="menu:classification"),
         InlineKeyboardButton("üóì –ü–ª–∞–Ω—ã",         callback_data="menu:plans")],
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫", callback_data="menu:add_bank"),
         InlineKeyboardButton("üîó –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data="menu:show_sheet")],
        [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data="menu:edit_table"),
         InlineKeyboardButton("üí≥ –ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ",   callback_data="menu:change_tariff")],
        [InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",        callback_data="menu:support"),
         InlineKeyboardButton("üîô –ù–∞–∑–∞–¥",            callback_data="menu:back")],
    ])


async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–Ω–æ–≤—ã–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)."""
    kb = _build_main_kb()
    if update.callback_query:
        await update.callback_query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:", reply_markup=kb
        )
    else:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é:", reply_markup=kb
        )
    return STATE_OP_MENU


async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    data = query.data  # –Ω–∞–ø—Ä–∏–º–µ—Ä "menu:finance"

    # ‚Äî –û—Ç–∫—Ä—ã—Ç—å / –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å –º–µ–Ω—é
    if data == "menu:open":
        await show_main_menu(update, context)
        return STATE_OP_MENU

    # ‚Äî –ù–∞–∑–∞–¥
    if data == "menu:back":
        from handlers.operations import go_main_menu
        return await go_main_menu(update, context)

    # ‚Äî –§–∏–Ω–∞–Ω—Å—ã
    if data == "menu:finance":
        await query.answer(text="–ü–æ–ª—É—á–∞—é –±–∞–ª–∞–Ω—Å‚Ä¶", show_alert=False)
        url = context.user_data.get("sheet_url")
        if not url:
            await query.edit_message_text(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É: /setup –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É.",
                reply_markup=_build_main_kb()
            )
            return STATE_OP_MENU

        try:
            ws, _ = open_finance_and_plans(url)

            # --- –∑–¥–µ—Å—å —Ä–µ–∞–ª—å–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞ –≤–º–µ—Å—Ç–æ get_all_records ---
            # —Ç—è–Ω–µ–º –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ C (3-—è) ‚Äî –±–∞–Ω–∫–∏, –∏ –∏–∑ F (6-—è) ‚Äî —Å—É–º–º—ã, –ø—Ä–æ–ø—É—Å–∫–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫
            bank_list = ws.col_values(3)[1:]
            sum_list  = ws.col_values(6)[1:]

            balances = {}
            for bank, raw in zip(bank_list, sum_list):
                if not bank:
                    # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                    continue
                # –ø—Ä–∏–≤–æ–¥–∏–º ¬´1 234,56¬ª ‚Üí ¬´1234.56¬ª
                s = str(raw).replace("\xa0", "").replace(" ", "").replace(",", ".")
                try:
                    amt = float(s)
                except ValueError:
                    # –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–µ —á–∏—Å–ª–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    continue
                balances[bank] = balances.get(bank, 0.0) + amt
            # ------------------------------------------------------------

        except Exception as e:
            await query.edit_message_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:\n{e}",
                reply_markup=_build_main_kb()
            )
            return STATE_OP_MENU

        total = sum(balances.values())
        # helper-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        def fmt(x: float) -> str:
            s = f"{x:,.2f}"  # e.g. "33,400.00" –∏–ª–∏ "-654.00"
            s = s.replace(",", "X").replace(".", ",").replace("X", " ")
            # —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "33 400,00" –∏–ª–∏ "-654,00"
            return s

        # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–Ω–∫–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
        lines = [
            f"‚Ä¢ {bank}: {fmt(balances[bank])}"
            for bank in sorted(balances)
        ]
        text = "üí∞ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ –±–∞–Ω–∫–∞–º:*\n" + "\n".join(lines)
        text += f"\n\n*–û–±—â–∞—è —Å—É–º–º–∞:* {fmt(total)}"

        await query.edit_message_text(
            text,
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu:open")]]))
        return STATE_OP_MENU

    # ‚Äî –û–ø–µ—Ä–∞—Ü–∏–∏
    if data == "menu:men_oper":
        return await start_men_oper(update, context)

    # - –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
    if data == "menu:classification":
        return await start_classification(update, context)

    # ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
    if data == "menu:show_sheet":
        url = context.user_data.get("sheet_url")
        if url:
            markup = InlineKeyboardMarkup([
                [InlineKeyboardButton("üîó –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=url)],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="menu:open")]])
            await query.edit_message_text(
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–∞—à—É Google-—Ç–∞–±–ª–∏—Ü—É:",
                reply_markup=markup)
        else:
            await query.edit_message_text(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É: /setup",
                reply_markup=_build_main_kb())
        return STATE_OP_MENU
   
    # ‚Äî –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
    if data == "menu:edit_table":
        await query.edit_message_text("‚úèÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤—É—é Google-—Ç–∞–±–ª–∏—Ü—É:")
        context.user_data["awaiting_sheet_url"] = True
        return STATE_OP_MENU

    # –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã ‚Äî –∑–∞–≥–ª—É—à–∫–∏
    responses = {
        "menu:change_tariff":  "üí≥ –†–∞–∑–¥–µ–ª ¬´–ü–æ–º–µ–Ω—è—Ç—å —Ç–∞—Ä–∏—Ñ¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
        "menu:support":        "üí¨ –†–∞–∑–¥–µ–ª ¬´–ü–æ–¥–¥–µ—Ä–∂–∫–∞¬ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Ä¶",
    }
    text = responses.get(data, "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.")
    await query.edit_message_text(text, reply_markup=_build_main_kb())
    return STATE_OP_MENU

# –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–±–∏–ª—Ü—É (–∫–Ω–æ–ø–∫–∞)

async def handle_new_sheet_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –õ–æ–≤–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –º—ã –∂–¥–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É.
    """
    if not context.user_data.get("awaiting_sheet_url"):
        return  # –Ω–µ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    url = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã (–±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π)
    import os
    from gspread import service_account as gspread_sa

    creds = os.getenv("GOOGLE_APPLICATION_CREDENTIALS")
    try:
        sa = gspread_sa(filename=creds)
        sa.open_by_url(url)
    except Exception as e:
        await update.message.reply_text(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É –Ω–∞ —á—Ç–µ–Ω–∏–µ: {e}\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É."
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π URL
    context.user_data["sheet_url"] = url
    # –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è
    context.user_data.pop("awaiting_sheet_url", None)
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!")

    # 1) –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å—Ä–∞–∑—É –≤–æ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª ¬´–î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫¬ª
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ë–∞–Ω–∫", callback_data="menu:add_bank")],
    ])
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –±–∞–Ω–∫–∏:",
        reply_markup=kb
    )
    # 2) –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    return




def register_menu_handlers(app):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π /menu –∏ –≤—Å–µ menu:* –∫–æ–ª–ª–±—ç–∫–∏."""
    # 1) –ö–æ–º–∞–Ω–¥–∞ /menu
    app.add_handler(CommandHandler("menu", show_main_menu))

    # 2) –†–∞–∑–¥–µ–ª ¬´–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª
    app.add_handler(CallbackQueryHandler(start_classification,pattern=r"^menu:classification$"))
    app.add_handler(CallbackQueryHandler(handle_class_period,pattern=r"^class_(prev|year|all)$"))
    app.add_handler(CallbackQueryHandler(handle_class_back,pattern=r"^class_back$"))

    # 3) –†–∞–∑–¥–µ–ª ¬´–ü–ª–∞–Ω—ã¬ª
    #app.add_handler(CallbackQueryHandler(start_plans,pattern=r"^menu:plans$"))

    # 3) –û–±—â–∏–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ menu:*
    app.add_handler(CallbackQueryHandler(handle_menu_selection,pattern=r"^menu:"))

    # 4) –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_new_sheet_response),
        # –≥—Ä—É–ø–ø–∞ >0, —á—Ç–æ–±—ã —ç—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª –ø–æ—Å–ª–µ –∫–æ–ª–ª–±–µ–∫–æ–≤ –º–µ–Ω—é
        group=1)

